[report "last_four_pump_hours.json"]
device = pump
hours = 4.0
use = iter_pump_hours
reporter = JSON

[report "iter_glucose_100.json"]
device = cgm
count = 100
use = iter_glucose
reporter = JSON

[report "iter_glucose_hours_4.json"]
device = cgm
hours = 4.0
use = iter_glucose_hours
reporter = JSON

[device "oref0"]
vendor = openaps.vendors.process
extra = oref0.ini

[device "calculate-iob"]
vendor = openaps.vendors.process
extra = calculate-iob.ini

[report "settings/settings.json"]
device = pump
use = read_settings
reporter = JSON

[report "settings/bg_targets.json"]
device = pump
use = read_bg_targets
reporter = JSON

[report "settings/insulin_sensitivities.json"]
device = pump
use = read_insulin_sensitivies
reporter = JSON

[report "settings/basal_profile.json"]
device = pump
use = read_basal_profile_std
reporter = JSON

[alias]
gather-profile = report invoke settings/settings.json settings/bg_targets.json settings/insulin_sensitivities.json settings/basal_profile.json settings/profile.json
monitor-pump = report invoke monitor/clock.json monitor/temp_basal.json monitor/pumphistory.json monitor/pumphistory-zoned.json monitor/clock-zoned.json monitor/iob.json monitor/meal.json
gather = ! bash -c "rm -f monitor/*; openaps gather-profile && openaps monitor-cgm && openaps monitor-pump && openaps report invoke monitor/iob.json"
preflight = ! bash -c "rm -f monitor/clock.json && echo -n \"PREFLIGHT \" && openaps report invoke monitor/clock.json 2>/dev/null >/dev/null && grep -q T monitor/clock.json && echo OK || ( mm-stick warmup || sudo oref0-reset-usb; echo FAIL; sleep 120; exit 1 )"
loop = ! bash -c "openaps monitor-cgm 2>/dev/null && ( openaps preflight && openaps gather && openaps enact) || echo No CGM data."
retry-loop = ! bash -c "until( ! mm-stick warmup || openaps loop); do sleep 5; done"
enact = report invoke enact/suggested.json enact/enacted.json
enact-report = report invoke enact/enacted.json
monitor-cgm = report invoke monitor/glucose.json

[report "monitor/pumphistory.json"]
device = pump
hours = 4.0
use = iter_pump_hours
reporter = JSON

[report "monitor/clock.json"]
device = pump
use = read_clock
reporter = JSON

[report "monitor/iob.json"]
profile = settings/profile.json
use = shell
reporter = JSON
clock = monitor/clock.json
json_default = True
pumphistory = monitor/pumphistory.json
device = calculate-iob
remainder = []

[report "monitor/temp_basal.json"]
device = pump
use = read_temp_basal
reporter = JSON

[report "monitor/glucose.json"]
device = cgm
count = 5
use = iter_glucose
reporter = JSON

[report "enact/enacted.json"]
device = pump
input = enact/suggested.json
use = set_temp_basal
reporter = JSON

[device "pump"]
vendor = openaps.vendors.medtronic
extra = pump.ini

[device "cgm"]
vendor = openaps.vendors.dexcom
extra = cgm.ini

[device "meal"]
vendor = openaps.vendors.process
extra = meal.ini

[device "get-profile"]
vendor = openaps.vendors.process
extra = get-profile.ini

[device "determine-basal"]
vendor = openaps.vendors.process
extra = determine-basal.ini

[report "monitor/meal.json"]
profile = settings/profile.json
use = shell
clock = monitor/clock-zoned.json
reporter = text
json_default = True
pumphistory = monitor/pumphistory-zoned.json
device = meal
remainder = 

[report "settings/carb_ratios.json"]
device = pump
use = read_carb_ratios
reporter = JSON

[report "settings/profile.json"]
use = shell
bg_targets = settings/bg_targets.json
settings = settings/settings.json
basal_profile = settings/basal_profile.json
reporter = text
json_default = True
carb_ratios = settings/carb_ratios.json
max_iob = max_iob.json
device = get-profile
remainder = 
isf = settings/insulin_sensitivities.json

[report "enact/suggested.json"]
profile = settings/profile.json
use = shell
temp_basal = monitor/temp_basal.json
reporter = text
json_default = True
iob = monitor/iob.json
device = determine-basal
offline = online
remainder = 
meal = monitor/meal.json
glucose = monitor/glucose.json

